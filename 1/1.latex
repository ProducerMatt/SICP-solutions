% Options for packages loaded elsewhere
\PassOptionsToPackage{unicode}{hyperref}
\PassOptionsToPackage{hyphens}{url}
%
\documentclass[
]{article}
\usepackage{amsmath,amssymb}
\usepackage{lmodern}
\usepackage{iftex}
\ifPDFTeX
  \usepackage[T1]{fontenc}
  \usepackage[utf8]{inputenc}
  \usepackage{textcomp} % provide euro and other symbols
\else % if luatex or xetex
  \usepackage{unicode-math}
  \defaultfontfeatures{Scale=MatchLowercase}
  \defaultfontfeatures[\rmfamily]{Ligatures=TeX,Scale=1}
\fi
% Use upquote if available, for straight quotes in verbatim environments
\IfFileExists{upquote.sty}{\usepackage{upquote}}{}
\IfFileExists{microtype.sty}{% use microtype if available
  \usepackage[]{microtype}
  \UseMicrotypeSet[protrusion]{basicmath} % disable protrusion for tt fonts
}{}
\makeatletter
\@ifundefined{KOMAClassName}{% if non-KOMA class
  \IfFileExists{parskip.sty}{%
    \usepackage{parskip}
  }{% else
    \setlength{\parindent}{0pt}
    \setlength{\parskip}{6pt plus 2pt minus 1pt}}
}{% if KOMA class
  \KOMAoptions{parskip=half}}
\makeatother
\usepackage{xcolor}
\IfFileExists{xurl.sty}{\usepackage{xurl}}{} % add URL line breaks if available
\IfFileExists{bookmark.sty}{\usepackage{bookmark}}{\usepackage{hyperref}}
\hypersetup{
  pdftitle={SICP Chapter 1},
  pdfauthor={ProducerMatt},
  hidelinks,
  pdfcreator={LaTeX via pandoc}}
\urlstyle{same} % disable monospaced font for URLs
\usepackage{color}
\usepackage{fancyvrb}
\newcommand{\VerbBar}{|}
\newcommand{\VERB}{\Verb[commandchars=\\\{\}]}
\DefineVerbatimEnvironment{Highlighting}{Verbatim}{commandchars=\\\{\}}
% Add ',fontsize=\small' for more characters per line
\newenvironment{Shaded}{}{}
\newcommand{\AlertTok}[1]{\textcolor[rgb]{1.00,0.00,0.00}{\textbf{#1}}}
\newcommand{\AnnotationTok}[1]{\textcolor[rgb]{0.38,0.63,0.69}{\textbf{\textit{#1}}}}
\newcommand{\AttributeTok}[1]{\textcolor[rgb]{0.49,0.56,0.16}{#1}}
\newcommand{\BaseNTok}[1]{\textcolor[rgb]{0.25,0.63,0.44}{#1}}
\newcommand{\BuiltInTok}[1]{#1}
\newcommand{\CharTok}[1]{\textcolor[rgb]{0.25,0.44,0.63}{#1}}
\newcommand{\CommentTok}[1]{\textcolor[rgb]{0.38,0.63,0.69}{\textit{#1}}}
\newcommand{\CommentVarTok}[1]{\textcolor[rgb]{0.38,0.63,0.69}{\textbf{\textit{#1}}}}
\newcommand{\ConstantTok}[1]{\textcolor[rgb]{0.53,0.00,0.00}{#1}}
\newcommand{\ControlFlowTok}[1]{\textcolor[rgb]{0.00,0.44,0.13}{\textbf{#1}}}
\newcommand{\DataTypeTok}[1]{\textcolor[rgb]{0.56,0.13,0.00}{#1}}
\newcommand{\DecValTok}[1]{\textcolor[rgb]{0.25,0.63,0.44}{#1}}
\newcommand{\DocumentationTok}[1]{\textcolor[rgb]{0.73,0.13,0.13}{\textit{#1}}}
\newcommand{\ErrorTok}[1]{\textcolor[rgb]{1.00,0.00,0.00}{\textbf{#1}}}
\newcommand{\ExtensionTok}[1]{#1}
\newcommand{\FloatTok}[1]{\textcolor[rgb]{0.25,0.63,0.44}{#1}}
\newcommand{\FunctionTok}[1]{\textcolor[rgb]{0.02,0.16,0.49}{#1}}
\newcommand{\ImportTok}[1]{#1}
\newcommand{\InformationTok}[1]{\textcolor[rgb]{0.38,0.63,0.69}{\textbf{\textit{#1}}}}
\newcommand{\KeywordTok}[1]{\textcolor[rgb]{0.00,0.44,0.13}{\textbf{#1}}}
\newcommand{\NormalTok}[1]{#1}
\newcommand{\OperatorTok}[1]{\textcolor[rgb]{0.40,0.40,0.40}{#1}}
\newcommand{\OtherTok}[1]{\textcolor[rgb]{0.00,0.44,0.13}{#1}}
\newcommand{\PreprocessorTok}[1]{\textcolor[rgb]{0.74,0.48,0.00}{#1}}
\newcommand{\RegionMarkerTok}[1]{#1}
\newcommand{\SpecialCharTok}[1]{\textcolor[rgb]{0.25,0.44,0.63}{#1}}
\newcommand{\SpecialStringTok}[1]{\textcolor[rgb]{0.73,0.40,0.53}{#1}}
\newcommand{\StringTok}[1]{\textcolor[rgb]{0.25,0.44,0.63}{#1}}
\newcommand{\VariableTok}[1]{\textcolor[rgb]{0.10,0.09,0.49}{#1}}
\newcommand{\VerbatimStringTok}[1]{\textcolor[rgb]{0.25,0.44,0.63}{#1}}
\newcommand{\WarningTok}[1]{\textcolor[rgb]{0.38,0.63,0.69}{\textbf{\textit{#1}}}}
\setlength{\emergencystretch}{3em} % prevent overfull lines
\providecommand{\tightlist}{%
  \setlength{\itemsep}{0pt}\setlength{\parskip}{0pt}}
\setcounter{secnumdepth}{-\maxdimen} % remove section numbering
\ifLuaTeX
  \usepackage{selnolig}  % disable illegal ligatures
\fi

\title{SICP Chapter 1}
\author{ProducerMatt}
\date{}

\begin{document}
\maketitle

\hypertarget{testing}{%
\section{Testing}\label{testing}}

\hypertarget{testing}{%
\label{testing}}%
\begin{Shaded}
\begin{Highlighting}[numbers=left,,]
\NormalTok{(}\ExtensionTok{define}\FunctionTok{ }\NormalTok{(foo a b)}
\NormalTok{  (}\OperatorTok{+}\NormalTok{ a (}\OperatorTok{*} \DecValTok{2}\NormalTok{ b)))}

\NormalTok{(foo }\DecValTok{5} \DecValTok{3}\NormalTok{)}
\end{Highlighting}
\end{Shaded}

\begin{Shaded}
\begin{Highlighting}[]
\NormalTok{11}
\end{Highlighting}
\end{Shaded}

\^{} Dynamically evaluated when you press "enter" on the
\texttt{BEGIN\_SRC} block!

\hypertarget{also-consider}{%
\subsection{Also consider:}\label{also-consider}}

\begin{itemize}
\tightlist
\item
  \texttt{:results\ output} for what the code prints
\item
  \texttt{:exports\ code} or \texttt{results} to just get one or the
  other
\end{itemize}

\(a + (\pi \times b)\) \textless\textasciitilde{} inline Latex btw :)

\hypertarget{exercise-1.1}{%
\section{Exercise 1.1}\label{exercise-1.1}}

\hypertarget{q}{%
\subsection{Q}\label{q}}

Below is a sequence of expressions. What is the result printed by the
interpreter in response to each expression? Assume that the sequence is
to be evaluated in the order in which it is presented.

\hypertarget{a}{%
\subsection{A}\label{a}}

\begin{Shaded}
\begin{Highlighting}[numbers=left,,]
\DecValTok{10} \CommentTok{;; 10}
\NormalTok{(}\OperatorTok{+} \DecValTok{5} \DecValTok{3} \DecValTok{4}\NormalTok{) }\CommentTok{;; 12}
\NormalTok{(}\OperatorTok{{-}} \DecValTok{9} \DecValTok{1}\NormalTok{) }\CommentTok{;; 8}
\NormalTok{(}\OperatorTok{/} \DecValTok{6} \DecValTok{2}\NormalTok{) }\CommentTok{;; 3}
\NormalTok{(}\OperatorTok{+}\NormalTok{ (}\OperatorTok{*} \DecValTok{2} \DecValTok{4}\NormalTok{) (}\OperatorTok{{-}} \DecValTok{4} \DecValTok{6}\NormalTok{)) }\CommentTok{;; 6}
\NormalTok{(}\ExtensionTok{define}\FunctionTok{ a }\DecValTok{3}\NormalTok{) }\CommentTok{;; a=3}
\NormalTok{(}\ExtensionTok{define}\FunctionTok{ b }\NormalTok{(}\OperatorTok{+}\NormalTok{ a }\DecValTok{1}\NormalTok{)) }\CommentTok{;; b=4}
\NormalTok{(}\OperatorTok{+}\NormalTok{ a b (}\OperatorTok{*}\NormalTok{ a b)) }\CommentTok{;; 19}
\NormalTok{(}\OperatorTok{=}\NormalTok{ a b) }\CommentTok{;; false}
\NormalTok{(}\KeywordTok{if}\NormalTok{ (}\KeywordTok{and}\NormalTok{ (}\OperatorTok{\textgreater{}}\NormalTok{ b a) (}\OperatorTok{\textless{}}\NormalTok{ b (}\OperatorTok{*}\NormalTok{ a b)))}
\NormalTok{    b}
\NormalTok{    a) }\CommentTok{;; 4}
\NormalTok{(}\KeywordTok{cond}\NormalTok{ ((}\OperatorTok{=}\NormalTok{ a }\DecValTok{4}\NormalTok{) }\DecValTok{6}\NormalTok{)}
\NormalTok{      ((}\OperatorTok{=}\NormalTok{ b }\DecValTok{4}\NormalTok{) (}\OperatorTok{+} \DecValTok{6} \DecValTok{7}\NormalTok{ a))}
\NormalTok{      (}\KeywordTok{else} \DecValTok{25}\NormalTok{)) }\CommentTok{;; 16}
\NormalTok{(}\OperatorTok{+} \DecValTok{2}\NormalTok{ (}\KeywordTok{if}\NormalTok{ (}\OperatorTok{\textgreater{}}\NormalTok{ b a) b a)) }\CommentTok{;; 6}
\NormalTok{(}\OperatorTok{*}\NormalTok{ (}\KeywordTok{cond}\NormalTok{ ((}\OperatorTok{\textgreater{}}\NormalTok{ a b) a)}
\NormalTok{         ((}\OperatorTok{\textless{}}\NormalTok{ a b) b)}
\NormalTok{         (}\KeywordTok{else}\NormalTok{ {-}}\DecValTok{1}\NormalTok{))}
\NormalTok{   (}\OperatorTok{+}\NormalTok{ a }\DecValTok{1}\NormalTok{)) }\CommentTok{;; 16}
\end{Highlighting}
\end{Shaded}

\hypertarget{exercise-1.2}{%
\section{Exercise 1.2}\label{exercise-1.2}}

\hypertarget{q-1}{%
\subsection{Q}\label{q-1}}

Translate the following expression into prefix form:

\begin{equation}
  \frac{5 + 2 + (2 - 3 - (6 + \frac{4}{5})))}
            {3(6 - 2)(2 - 7)}
\end{equation}

\hypertarget{a-1}{%
\subsection{A}\label{a-1}}

\hypertarget{EX1-2}{%
\label{EX1-2}}%
\begin{Shaded}
\begin{Highlighting}[]
\NormalTok{(}\OperatorTok{/}\NormalTok{ (}\OperatorTok{+} \DecValTok{5} \DecValTok{2}\NormalTok{ (}\OperatorTok{{-}} \DecValTok{2} \DecValTok{3}\NormalTok{ (}\OperatorTok{+} \DecValTok{6}\NormalTok{ (}\OperatorTok{/} \DecValTok{4} \DecValTok{5}\NormalTok{))))}
\NormalTok{   (}\OperatorTok{*} \DecValTok{3}\NormalTok{ (}\OperatorTok{{-}} \DecValTok{6} \DecValTok{2}\NormalTok{) (}\OperatorTok{{-}} \DecValTok{2} \DecValTok{7}\NormalTok{)))}
\end{Highlighting}
\end{Shaded}

\begin{Shaded}
\begin{Highlighting}[]
\NormalTok{1/75}
\end{Highlighting}
\end{Shaded}

\hypertarget{exercise-1.3}{%
\section{Exercise 1.3}\label{exercise-1.3}}

\hypertarget{text}{%
\subsection{Text}\label{text}}

\hypertarget{square}{%
\label{square}}%
\begin{Shaded}
\begin{Highlighting}[]
\NormalTok{(}\ExtensionTok{define}\FunctionTok{ }\NormalTok{(square x)}
\NormalTok{  (}\OperatorTok{*}\NormalTok{ x x))}
\end{Highlighting}
\end{Shaded}

\hypertarget{q-2}{%
\subsection{Q}\label{q-2}}

Define a procedure that takes three numbers as arguments and returns the
sum of the squares of the two larger numbers.

\hypertarget{a-2}{%
\subsection{A}\label{a-2}}

\hypertarget{EX1-3}{%
\label{EX1-3}}%
\begin{Shaded}
\begin{Highlighting}[numbers=left,,]
\NormalTok{\textless{}\textless{}square\textgreater{}\textgreater{}}
\NormalTok{(}\ExtensionTok{define}\FunctionTok{ }\NormalTok{(sum{-}square x y)}
\NormalTok{  (}\OperatorTok{+}\NormalTok{ (square x) (square y)))}
\NormalTok{(}\ExtensionTok{define}\FunctionTok{ }\NormalTok{(square{-}2of3 a b c)}
\NormalTok{  (}\KeywordTok{cond}\NormalTok{ ((}\KeywordTok{and}\NormalTok{ (}\OperatorTok{\textgreater{}=}\NormalTok{ a b) (}\OperatorTok{\textgreater{}=}\NormalTok{ b c)) (sum{-}square a b))}
\NormalTok{        ((}\KeywordTok{and}\NormalTok{ (}\OperatorTok{\textgreater{}=}\NormalTok{ a b) (}\OperatorTok{\textgreater{}}\NormalTok{ c b)) (sum{-}square a c))}
\NormalTok{        ((}\KeywordTok{and}\NormalTok{ (}\OperatorTok{\textgreater{}}\NormalTok{ b a) (}\OperatorTok{\textgreater{}=}\NormalTok{ c a)) (sum{-}square b c))}
\NormalTok{        (}\KeywordTok{else} \StringTok{"This shouldn\textquotesingle{}t happen"}\NormalTok{)))}

\NormalTok{(}\KeywordTok{list}\NormalTok{ (square{-}2of3 }\DecValTok{7} \DecValTok{5} \DecValTok{3}\NormalTok{)}
\NormalTok{      (square{-}2of3 }\DecValTok{7} \DecValTok{3} \DecValTok{5}\NormalTok{)}
\NormalTok{      (square{-}2of3 }\DecValTok{3} \DecValTok{5} \DecValTok{7}\NormalTok{))}

\end{Highlighting}
\end{Shaded}

\begin{Shaded}
\begin{Highlighting}[]
\NormalTok{(74 74 74)}
\end{Highlighting}
\end{Shaded}

\hypertarget{exercise-1.4}{%
\section{Exercise 1.4}\label{exercise-1.4}}

\hypertarget{q-3}{%
\subsection{Q}\label{q-3}}

Observe that our model of evaluation allows for combinations whose
operators are compound expressions. Use this observation to describe the
behavior of the following procedure:

\hypertarget{a-plus-abs-b}{%
\label{a-plus-abs-b}}%
\begin{Shaded}
\begin{Highlighting}[]
\NormalTok{(}\ExtensionTok{define}\FunctionTok{ }\NormalTok{(a{-}plus{-}abs{-}b a b)}
\NormalTok{  ((}\KeywordTok{if}\NormalTok{ (}\OperatorTok{\textgreater{}}\NormalTok{ b }\DecValTok{0}\NormalTok{) }\OperatorTok{+} \OperatorTok{{-}}\NormalTok{) a b))}
\end{Highlighting}
\end{Shaded}

\hypertarget{a-3}{%
\subsection{A}\label{a-3}}

This code accepts the variables \texttt{a} and \texttt{b}, and if
\texttt{b} is positive, it adds \texttt{a} and \texttt{b}. However, if
\texttt{b} is zero or negative, it subtracts them. This decision is made
by using the \texttt{+} and \texttt{-} procedures as the results of an
if expression, and then evaluating according to the results of that
expression. This is in contrast to a language like Python, which would
do something like this:

\begin{Shaded}
\begin{Highlighting}[]
\ControlFlowTok{if}\NormalTok{ b }\OperatorTok{\textgreater{}} \DecValTok{0}\NormalTok{: a }\OperatorTok{+}\NormalTok{ b}
\ControlFlowTok{else}\NormalTok{: a }\OperatorTok{{-}}\NormalTok{ b}
\end{Highlighting}
\end{Shaded}

\hypertarget{exercise-1.5}{%
\section{Exercise 1.5}\label{exercise-1.5}}

\hypertarget{q-4}{%
\subsection{Q}\label{q-4}}

Ben Bitdiddle has invented a test to determine whether the interpreter
he is faced with is using applicative-order evaluation or normal-order
evaluation. He defines the following two procedures:

\begin{Shaded}
\begin{Highlighting}[]
\NormalTok{(}\ExtensionTok{define}\FunctionTok{ }\NormalTok{(p) (p))}

\NormalTok{(}\ExtensionTok{define}\FunctionTok{ }\NormalTok{(test x y)}
\NormalTok{  (}\KeywordTok{if}\NormalTok{ (}\OperatorTok{=}\NormalTok{ x }\DecValTok{0}\NormalTok{)}
      \DecValTok{0}
\NormalTok{      y))}
\end{Highlighting}
\end{Shaded}

Then he evaluates the expression

\begin{Shaded}
\begin{Highlighting}[]
\NormalTok{(test }\DecValTok{0}\NormalTok{ (p))}
\end{Highlighting}
\end{Shaded}

What behavior will Ben observe with an interpreter that uses
applicative-order evaluation? What behavior will he observe with an
interpreter that uses normal-order evaluation? Explain your answer.
(Assume that the evaluation rule for the special form if is the same
whether the interpreter is using normal or applicative order: The
predicate expression is evaluated first, and the result determines
whether to evaluate the consequent or the alternative expression.)

\hypertarget{a-4}{%
\subsection{A}\label{a-4}}

In either type of language,
\VERB|\NormalTok{(}\ExtensionTok{define}\FunctionTok{ }\NormalTok{(p) (p))}|
is an infinite loop. However, a normal-order language will encounter the
special form, return \texttt{0}, and never evaluate \texttt{(p)}. An
applicative-order language evaluates the arguments to
\VERB|\NormalTok{(test }\DecValTok{0}\NormalTok{ (p))}|, thus triggering
the infinite loop.

\hypertarget{exercise-1.6}{%
\section{Exercise 1.6}\label{exercise-1.6}}

\hypertarget{text-code}{%
\subsection{Text code}\label{text-code}}

\hypertarget{txt-sqrt}{%
\label{txt-sqrt}}%
\begin{Shaded}
\begin{Highlighting}[]
\NormalTok{(}\ExtensionTok{define}\FunctionTok{ }\NormalTok{(average x y)}
\NormalTok{  (}\OperatorTok{/}\NormalTok{ (}\OperatorTok{+}\NormalTok{ x y) }\DecValTok{2}\NormalTok{))}

\NormalTok{(}\ExtensionTok{define}\FunctionTok{ }\NormalTok{(improve guess x)}
\NormalTok{  (average guess (}\OperatorTok{/}\NormalTok{ x guess)))}

\NormalTok{(}\ExtensionTok{define}\FunctionTok{ }\NormalTok{(good{-}enough? guess x)}
\NormalTok{  (}\OperatorTok{\textless{}}\NormalTok{ (}\KeywordTok{abs}\NormalTok{ (}\OperatorTok{{-}}\NormalTok{ (square guess) x)) }\FloatTok{0.001}\NormalTok{))}

\NormalTok{(}\ExtensionTok{define}\FunctionTok{ }\NormalTok{(sqrt{-}iter guess x)}
\NormalTok{  (}\KeywordTok{if}\NormalTok{ (good{-}enough? guess x)}
\NormalTok{      guess}
\NormalTok{      (sqrt{-}iter (improve guess x) x)))}

\NormalTok{(}\ExtensionTok{define}\FunctionTok{ }\NormalTok{(}\KeywordTok{sqrt}\NormalTok{ x)}
\NormalTok{  (sqrt{-}iter }\FloatTok{1.0}\NormalTok{ x))}
\end{Highlighting}
\end{Shaded}

\hypertarget{q-5}{%
\subsection{Q}\label{q-5}}

Exercise 1.6: Alyssa P. Hacker doesn't see why if needs to be provided
as a special form. ``Why can't I just define it as an ordinary procedure
in terms of cond?'' she asks. Alyssa's friend Eva Lu Ator claims this
can indeed be done, and she defines a new version of if:

\begin{Shaded}
\begin{Highlighting}[]
\NormalTok{(}\ExtensionTok{define}\FunctionTok{ }\NormalTok{(new{-}if predicate}
\NormalTok{                then{-}clause}
\NormalTok{                else{-}clause)}
\NormalTok{  (}\KeywordTok{cond}\NormalTok{ (predicate then{-}clause)}
\NormalTok{        (}\KeywordTok{else}\NormalTok{ else{-}clause)))}
\end{Highlighting}
\end{Shaded}

Eva demonstrates the program for Alyssa:

\begin{Shaded}
\begin{Highlighting}[]
\NormalTok{(new{-}if (}\OperatorTok{=} \DecValTok{2} \DecValTok{3}\NormalTok{) }\DecValTok{0} \DecValTok{5}\NormalTok{)}
\CommentTok{;; =\textgreater{} 5}

\NormalTok{(new{-}if (}\OperatorTok{=} \DecValTok{1} \DecValTok{1}\NormalTok{) }\DecValTok{0} \DecValTok{5}\NormalTok{)}
\CommentTok{;; =\textgreater{} 0}
\end{Highlighting}
\end{Shaded}

Delighted, Alyssa uses new-if to rewrite the square-root program:

\begin{Shaded}
\begin{Highlighting}[]
\NormalTok{(}\ExtensionTok{define}\FunctionTok{ }\NormalTok{(sqrt{-}iter guess x)}
\NormalTok{  (new{-}if (good{-}enough? guess x)}
\NormalTok{          guess}
\NormalTok{          (sqrt{-}iter (improve guess x) x)))}
\end{Highlighting}
\end{Shaded}

What happens when Alyssa attempts to use this to compute square roots?
Explain.

\hypertarget{a-5}{%
\subsection{A}\label{a-5}}

Using Alyssa's \texttt{new-if} leads to an infinite loop because the
recursive call to \texttt{sqrt-iter} is evaluated before the actual call
to \texttt{new-if}. This is because \texttt{if} and \texttt{cond} are
special forms that change the way evaluation is handled; whichever
branch is chosen leaves the other branches unevaluated.

\end{document}
